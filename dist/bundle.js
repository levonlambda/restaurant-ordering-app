/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const FOOD_PIZZA = \"pizza\"\r\nconst FOOD_HAMBURGER = \"hamburger\"\r\nconst FOOD_BEER = \"beer\"\r\nconst COMPLETE_ORDER_BTN_ID =\"complete-order-btn\"\r\nconst PAYMENT_BTN_ID = \"pay-btn\"\r\nconst PAYMENT_FORM_ID = \"payment-form\"\r\n\r\nconst checkOutContainerEl = document.getElementById(\"check-out-container\")\r\nconst checkOutItemContainerEl = document.getElementById(\"check-out-item-container\")\r\nconst paymentContainerEl = document.getElementById(\"check-out-total-container\")\r\nconst paymentEl = document.getElementById(\"payment-form\")\r\nconst paymentCompleteEl =document.getElementById(\"payment-complete-container\")\r\nconst paymentMsgEl = document.getElementById(\"payment-complete-msg\")\r\nlet orderedFoodList = []\r\n\r\ndocument.addEventListener(\"click\", function(event) {\r\n    if(event.target.dataset.food) {\r\n        handleAddToCartEvent(event)\r\n    }\r\n    else if(event.target.dataset.remove) {\r\n        handleRemoveFromCartEvent(event)\r\n    }\r\n    else if(event.target.id === COMPLETE_ORDER_BTN_ID) {\r\n        processOrder()\r\n    }\r\n    else if(event.target.id === PAYMENT_BTN_ID) {\r\n        processPayment(event)\r\n    }\r\n}) \r\n\r\nfunction handleAddToCartEvent(event) {\r\n    addFoodToCart(createFoodObject(event.target.dataset.food))\r\n    render()\r\n}\r\n\r\nfunction handleRemoveFromCartEvent(event) {\r\n    removeFoodFromCart(event.target.dataset.remove)\r\n    render()\r\n}\r\n\r\nfunction createFoodObject(name) {\r\n    let food\r\n    if(name == FOOD_PIZZA) {\r\n        food = {\r\n            name: \"Pizza\",\r\n            qty: 1,\r\n            price: 14,\r\n            total_price: 1*14,\r\n            desc: [\"pepperoni\", \"mushroom\", \"mozarella\"]\r\n        }\r\n    }\r\n    else if(name == FOOD_HAMBURGER) {\r\n        food = {\r\n            name: \"Hamburger\",\r\n            qty: 1,\r\n            price: 12,\r\n            total_price: 1*12,\r\n            desc: [\"beef\", \"cheese\", \"lettuce\"]\r\n        }\r\n    }\r\n    else if(name == FOOD_BEER) {\r\n        food = {\r\n            name: \"Beer\",\r\n            qty: 1,\r\n            price: 12,\r\n            total_price: 1*12,\r\n            desc: [\"grain\", \"hops\", \"yeast\", \"water\"]\r\n        }\r\n    }\r\n\r\n    return food\r\n}\r\n\r\nfunction addFoodToCart(food) {\r\n   if(!foodAlreadyExist(food)) {\r\n        orderedFoodList.push(food)\r\n   }\r\n}\r\n\r\nfunction removeFoodFromCart(foodName) {\r\n    for(let i = 0; i < orderedFoodList.length; i++) {\r\n        let currentFood = orderedFoodList[i]\r\n        if(currentFood.name === foodName) {\r\n            if(currentFood.qty !== 1 ) {\r\n                currentFood.qty--\r\n                currentFood.total_price = currentFood.qty * currentFood.price\r\n            }\r\n            else {\r\n                orderedFoodList.splice(i,1)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction foodAlreadyExist(food) {\r\n    let exists = false\r\n    orderedFoodList.forEach(function(currentFood) {\r\n        if(food.name === currentFood.name) {\r\n            currentFood.qty++\r\n            currentFood.total_price = currentFood.qty * currentFood.price\r\n            exists = true\r\n        }\r\n    })\r\n\r\n    return exists\r\n}\r\n\r\nfunction processOrder() {    \r\n    paymentEl.removeAttribute(\"hidden\")\r\n}\r\n\r\nfunction processPayment(event) {    \r\n    let isFormValid = paymentEl.checkValidity();\r\n    if(!isFormValid) {\r\n        paymentEl.reportValidity();\r\n    }\r\n    else {\r\n        event.preventDefault()\r\n        const formData = new FormData(paymentEl)\r\n        const customerName = formData.get(\"customer-name\")\r\n        const cardNumber = formData.get(\"card-number\")\r\n        const cvvNumber = formData.get(\"cvvNumber\")\r\n        paymentEl.setAttribute(\"hidden\",true)\r\n        checkOutContainerEl.setAttribute(\"hidden\",true)\r\n        paymentCompleteEl.removeAttribute(\"hidden\")\r\n        paymentMsgEl.textContent = `Thanks, ${customerName}! Your order is on its way!`\r\n    }\r\n}\r\n\r\nfunction render() {\r\n    checkOutItemContainerEl.innerHTML = getCheckOutListHtml()\r\n    paymentContainerEl.innerHTML = getPaymentTotalHtml()\r\n\r\n    //If our food list array contains elements then we remove hidden to show our element\r\n    if(orderedFoodList.length > 0) {\r\n        checkOutContainerEl.removeAttribute(\"hidden\")\r\n    }\r\n    //Otherwise we set it to hidden\r\n    else {\r\n        checkOutContainerEl.setAttribute(\"hidden\",true)\r\n    }\r\n}\r\n\r\nfunction getPaymentTotalHtml() {\r\n    let innerHtml = \"\"\r\n    let totalPrice = 0;\r\n    orderedFoodList.forEach(function(food){\r\n        totalPrice += food.total_price \r\n    })\r\n\r\n    innerHtml =\r\n        `<p class=\"total-price-text item-style total-style\">Total price:</p>\r\n         <p class=\"total-price item-style total-style\">$${totalPrice}</p>`\r\n\r\n    return innerHtml\r\n}\r\n\r\nfunction getCheckOutListHtml() {\r\n    let innerHtml = \"\"\r\n    orderedFoodList.forEach(function(food) {\r\n        innerHtml += \r\n        ` <div class=\"check-out-item-list-container\">\r\n            <div class=\"check-out-inner-container\">\r\n                <p class=\"check-out-item item-style\">${food.name}</p> \r\n                <a href=\"javascript:void(0)\" class=\"remove-item\" data-remove=\"${food.name}\">remove</a>\r\n            </div>\r\n            <div class=\"check-out-price-container\">\r\n                <p class=\"check-out-price  item-style\">$${food.price}</p> \r\n                <p class=\"check-out-qty \">X ${food.qty}</p>  \r\n                <p class=\"check-out-price-total item-style\">$${food.total_price}</p>\r\n            </div>\r\n        </div>`\r\n    })\r\n\r\n    return innerHtml\r\n}\n\n//# sourceURL=webpack://restaurant-ordering-app/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;